From d88f5190628d137be3a7908336207ad0ca20de5f Mon Sep 17 00:00:00 2001
From: Pete Batard <pete@akeo.ie>
Date: Mon, 17 Aug 2020 14:03:00 +0100
Subject: [PATCH 1/1] Platform/RaspberryPi: Add MCFG table

Even though it's not mandatory, some systems like Debian will thrown an
"ACPI: Failed to parse MCFG (-19)" during boot in MCFG is not present.

Signed-off-by: Pete Batard <pete@akeo.ie>
---
 Platform/RaspberryPi/AcpiTables/AcpiTables.inf |  3 +
 Platform/RaspberryPi/AcpiTables/Mcfg.aslc      | 81 ++++++++++++++++++++
 2 files changed, 84 insertions(+)

diff --git a/Platform/RaspberryPi/AcpiTables/AcpiTables.inf b/Platform/RaspberryPi/AcpiTables/AcpiTables.inf
index 28d2afe19733..51f518ab1d75 100644
--- a/Platform/RaspberryPi/AcpiTables/AcpiTables.inf
+++ b/Platform/RaspberryPi/AcpiTables/AcpiTables.inf
@@ -29,6 +29,9 @@ [Sources]
   Fadt.aslc
   Dbg2.aslc
   Gtdt.aslc
+#if (RPI_MODEL == 4)
+  Mcfg.aslc
+#endif
   Dsdt.asl
   Csrt.aslc
   Spcr.aslc
diff --git a/Platform/RaspberryPi/AcpiTables/Mcfg.aslc b/Platform/RaspberryPi/AcpiTables/Mcfg.aslc
new file mode 100644
index 000000000000..7315e2a88c91
--- /dev/null
+++ b/Platform/RaspberryPi/AcpiTables/Mcfg.aslc
@@ -0,0 +1,81 @@
+/** @file
+ *
+ *  Memory Mapped Configuration Address Space table (MCFG)
+ *
+ *  Copyright (c) 2019, Pete Batard <pete@akeo.ie>
+ *  Copyright (c) 2013-2015 Intel Corporation.
+ *
+ *  SPDX-License-Identifier: BSD-2-Clause-Patent
+ *
+ **/
+
+#include <IndustryStandard/Acpi.h>
+#include <IndustryStandard/MemoryMappedConfigurationSpaceAccessTable.h>
+
+#include "AcpiTables.h"
+
+//
+// Multiple APIC Description Table
+//
+#pragma pack (1)
+
+#define RPI_ACPI_OEM_MCFG_REVISION              0x00000001
+//
+// The Pi 4 is not ECAM compliant so, ideally, we would just skip populating
+// an allocation structure. However, GenFw throws 'MCFG length check failed'
+// when the number of allocation structures is zero, so we need at least one.
+//
+#define RPI_ACPI_ALLOCATION_STRUCTURE_COUNT     1
+
+typedef struct {
+  EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_BASE_ADDRESS_TABLE_HEADER Header;
+  EFI_ACPI_MEMORY_MAPPED_ENHANCED_CONFIGURATION_SPACE_BASE_ADDRESS_ALLOCATION_STRUCTURE  AllocationStructure[RPI_ACPI_ALLOCATION_STRUCTURE_COUNT];
+} EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_SPACE_ACCESS_DESCRIPTION_TABLE;
+
+STATIC EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_SPACE_ACCESS_DESCRIPTION_TABLE Mcfg =
+{
+  {
+    //------------------------------------------------------------------------
+    // ACPI Table Header
+    //------------------------------------------------------------------------
+    {
+      EFI_ACPI_3_0_PCI_EXPRESS_MEMORY_MAPPED_CONFIGURATION_SPACE_BASE_ADDRESS_DESCRIPTION_TABLE_SIGNATURE,
+      sizeof (EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_SPACE_ACCESS_DESCRIPTION_TABLE),
+      EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_SPACE_ACCESS_TABLE_REVISION,
+      0x00,                                     // Checksum calculated at runtime.
+      EFI_ACPI_OEM_ID,                          // OEMID is a 6 bytes long field "BC2836"
+      EFI_ACPI_OEM_TABLE_ID,                    // OEM table identification(8 bytes long) "RPI4EDK2"
+      EFI_ACPI_OEM_REVISION,                    // OEM revision number
+      EFI_ACPI_CREATOR_ID,                      // ASL compiler vendor ID
+      EFI_ACPI_CREATOR_REVISION                 // ASL compiler revision number
+    },
+    //------------------------------------------------------------------------
+    // Reserved
+    //------------------------------------------------------------------------
+    0x0000000000000000,                         // Reserved
+  },
+
+  //------------------------------------------------------------------------
+  // MCFG specific fields
+  //------------------------------------------------------------------------
+  {
+    {
+      //
+      // Using (-1) as the base address tells the OS to ignore it.
+      //
+      0xFFFFFFFFFFFFFFFFULL,                    // BaseAddress
+      0x0000,                                   // PciSegmentGroupNumber
+      0x00,                                     // StartBusNumber
+      0x00,                                     // EndBusNumber
+      0x00000000                                // Reserved
+    }
+  }
+};
+
+#pragma pack()
+
+//
+// Reference the table being generated to prevent the optimizer from removing
+// the data structure from the executable
+//
+VOID* CONST ReferenceAcpiTable = &Mcfg;
-- 
2.21.0.windows.1

